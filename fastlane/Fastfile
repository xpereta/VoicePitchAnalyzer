# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.53.1"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    #ENV["APPLEID_PASSWORD"]
    #ENV["APPLEID_USERNAME"] = "nitz.carola@googlemail.com"
    #ENV["IOS_KEYS"]
    ENV["APP_ID"] = "com.carolanitz.voice-pitch-analyzer"
    ENV["KEYCHAIN"] = "github_keychain"
    #ENV["FASTLANE_PASSWORD"] = "Test"
    #cocoapods

    create_keychain(
		  name: ENV["KEYCHAIN"],
		  password: ENV["APPLEID_PASSWORD"],
		  default_keychain: true,
		  unlock: true,
		  timeout: 3600,
		  lock_when_sleeps: false
	  )
    
  end

  #desc "Submit to TestFlight"
  #lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    #gym # Build your app - more options available
    #pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  #end

  desc "Submit to App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    #gym # Build your app - more options available
    #deliver(force: true)
    signing_identity = "Apple Distribution: Carola Nitz (EHS3N33NZL)"
    build_app(
      scheme: "Voice Pitch Analyzer",
      workspace: "Voice Pitch Analyzer.xcworkspace",
      export_options: {
        method: "app-store",
        configuration: "Release",
        codesigning_identity: signing_identity,
        provisioningProfiles: { 
          "com.carolanitz.voice-pitch-analyzer" => "match AppStore com.carolanitz.voice-pitch-analyzer",
        }
      }
    )
    # frameit
  end

  desc "Signing iOS App"
  lane :codeSign do  

    match(
      type: "appstore",
		  readonly: is_ci,
	  	keychain_name: ENV["KEYCHAIN"],
	  	keychain_password: ENV["APPLEID_PASSWORD"]
  	)

    cert(username: ENV["APPLEID_USERNAME"])
    
    sigh(
      force: true,
      username: ENV["APPLEID_USERNAME"],
      team_id: "EHS3N33NZL",
      #password: ENV["APPLEID_PASSWORD"],
      app_identifier: ENV["APP_ID"]
    )
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
