# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.87"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    #ENV["APPLEID_PASSWORD"]
    #ENV["APPLEID_USERNAME"] = "nitz.carola@googlemail.com"
    #ENV["IOS_KEYS"]
    ENV["APP_ID"] = "com.carolanitz.voice-pitch-analyzer"
    ENV["KEYCHAIN"] = "github_keychain"
    ENV["PROJECT_PATH"] = "Voice Pitch Analyzer.xcodeproj"
    ENV["PROJECT_WORKSPACE"] = "Voice Pitch Analyzer.xcworkspace"
    ENV["TEAM_ID"] = "EHS3N33NZL"
    ENV["SCHEME"] = "Voice Pitch Analyzer"
    #ENV["MATCH_PASSWORD"] = ENV["FASTLANE_MATCH"]
    ENV["SIGNING_IDENTITY"] = "Apple Distribution: Carola Nitz (EHS3N33NZL)"
    #ENV["FASTLANE_PASSWORD"] = "Test"
    #cocoapods

    create_keychain(
		  name: ENV["KEYCHAIN"],
		  password: ENV["APPLEID_PASSWORD"],
		  default_keychain: true,
		  unlock: true,
		  timeout: 3600,
		  lock_when_sleeps: false
    )
    
    unlock_keychain(
      path: ENV["KEYCHAIN"],
      password: ENV["APPLEID_PASSWORD"]
    )
    
  end

  #desc "Submit to TestFlight"
  #lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    #gym # Build your app - more options available
    #pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  #end

  desc "Submit to App Store"
  lane :release do

    sync_code_signing(
      type: "appstore",
      git_basic_authorization: Base64.strict_encode64(ENV["TOKEN_GITHUB"]),
      readonly: true,
      keychain_name: ENV["KEYCHAIN"],
      keychain_password: ENV["APPLEID_PASSWORD"]
    )

    disable_automatic_code_signing(
      path: ENV["PROJECT_PATH"]
    )

    update_project_team(
      path: ENV["PROJECT_PATH"],
      teamid: ENV["TEAM_ID"]
    )

    update_project_provisioning(
      xcodeproj: ENV["PROJECT_PATH"],
      profile: ENV["sigh_com.carolanitz.voice-pitch-analyzer_appstore_profile-path"],
      build_configuration: "Release",
      target_filter: "Voice Pitch Analyzer",
      code_signing_identity: ENV["SIGNING_IDENTITY"]
    )

    update_provisioning_profile_specifier(
      new_specifier: 'match AppStore com.carolanitz.voice-pitch-analyzer',
      configuration: 'Release'
    )

    # gym(
    #   scheme: ENV["SCHEME"], 
    #   export_method: 'app-store', 
    #   export_options: { 
    #     provisioningProfiles: {
    #       "com.carolanitz.voice-pitch-analyzer" => "match AppStore com.carolanitz.voice-pitch-analyzer",
    #     } 
    #   },
    #   clean: true,
    #   xcargs: "-UseNewBuildSystem=NO"
    # )

    build_app(
      workspace: ENV["PROJECT_WORKSPACE"],
      scheme: ENV["SCHEME"],
      clean: true,
      xcargs: "-UseNewBuildSystem=NO",
      export_options: {
        method: "app-store",
        configuration: "Release",
        codesigning_identity: ENV["SIGNING_IDENTITY"],
        provisioningProfiles: { 
          "com.carolanitz.voice-pitch-analyzer" => ENV["sigh_com.carolanitz.voice-pitch-analyzer_appstore_profile-name"],
        }
      }
    )


    # match(type: "appstore")
    # snapshot
    #gym # Build your app - more options available
    #deliver(force: true)
    #signing_identity = "Apple Distribution: Carola Nitz (EHS3N33NZL)"
    #build_app(
    #  scheme: "Voice Pitch Analyzer",
    #  workspace: "Voice Pitch Analyzer.xcworkspace",
    #  export_options: {
    #    method: "app-store",
    #    configuration: "Release",
    #    codesigning_identity: signing_identity,
    #    provisioningProfiles: { 
    #      "com.carolanitz.voice-pitch-analyzer" => "match AppStore com.carolanitz.voice-pitch-analyzer",
    #    }
    #  }
    #)
    # frameit
  end

  # desc "Signing iOS App"
  # lane :codeSign do  

  #   match(
  #     type: "appstore",
	# 	  readonly: is_ci,
	#   	keychain_name: ENV["KEYCHAIN"],
	#   	keychain_password: ENV["APPLEID_PASSWORD"]
  # 	)

  #   cert(username: ENV["APPLEID_USERNAME"])
    
  #   sigh(
  #     force: true,
  #     username: ENV["APPLEID_USERNAME"],
  #     team_id: "EHS3N33NZL",
  #     #password: ENV["APPLEID_PASSWORD"],
  #     app_identifier: ENV["APP_ID"]
  #   )
  # end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
